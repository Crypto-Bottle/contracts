{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x72bA766811984098C025f33a42ED079f2e41503B",
      "txHash": "0x64ccb58a3a74a7d4c76a93b32a5e1d620110f12c8ab7c9d0967fd6b220ddf20b",
      "kind": "uups"
    },
    {
      "address": "0x988a42BEE4fab0bC63843635CeC2ADc7F635D055",
      "txHash": "0xf78912e82b563247f519c2a03ac1a319d2fb7341c26ebd5629bab738987c77f5",
      "kind": "uups"
    },
    {
      "address": "0x52Ef9d8808814f321eaE86a6F945830286738E17",
      "txHash": "0x166bb61b9663aaae2712ea649e65fe7c2a9771203cb66dcda0295d3c6b544909",
      "kind": "uups"
    },
    {
      "address": "0x444677954C4991F10864F608a07d7f7eBD41143C",
      "txHash": "0x94a36634105136e240f30b62fcf8ec7af2b2483926742ac4629f4b1bae1347eb",
      "kind": "uups"
    },
    {
      "address": "0x4660083D21e3A7e1eC5af8f46A31dCFAa78479Ed",
      "txHash": "0x4bac017ee8e56c8765eeb394da0703020e206c7de60afddcb3216746df63eaf0",
      "kind": "uups"
    },
    {
      "address": "0xeAC83907071BED6ca9D802a2Bd95bb554D51EdB7",
      "txHash": "0xf8f1aca1e6c6f6992feb3898917f22de2d90ab8afafb173a9a52b490b6d43bdc",
      "kind": "uups"
    }
  ],
  "impls": {
    "de2ef0519656e4f332bb2cc427fddcbc86ae6ebbcf30cf4e696114f274453dc0": {
      "address": "0x13a1E1831357163091442463c3c946E173eCd354",
      "txHash": "0x10471d331067ff5d30e1f5f5873f45d84c35add75ef1777b21a9bb58a6b50c6b",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts/src/VRFConsumerBaseV2Upgradeable.sol:101"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)4411",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:49"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:54"
          },
          {
            "label": "coordinator",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(VRFCoordinatorV2Interface)7875",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:96"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:100"
          },
          {
            "label": "callbackGasLimit",
            "offset": 0,
            "slot": "5",
            "type": "t_uint32",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:104"
          },
          {
            "label": "requestConfirmations",
            "offset": 4,
            "slot": "5",
            "type": "t_uint16",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:108"
          },
          {
            "label": "s_subscriptionId",
            "offset": 6,
            "slot": "5",
            "type": "t_uint64",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:112"
          },
          {
            "label": "randomnessRequestData",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(RandomRequestData)6881_storage)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:114"
          },
          {
            "label": "cryptoBottles",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(CryptoBottle)6858_storage)dyn_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:119"
          },
          {
            "label": "tokenToCryptoBottle",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:124"
          },
          {
            "label": "uniqueERC20TokenAddresses",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:129"
          },
          {
            "label": "tokenAddressExists",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:134"
          },
          {
            "label": "totalTokenQuantity",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:139"
          },
          {
            "label": "unclaimedBottlesByCategory",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_enum(CategoryType)6864,t_array(t_uint256)dyn_storage)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:144"
          },
          {
            "label": "openedBottles",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)96_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)554_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)105_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)96_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC2981Storage)564_storage": {
            "label": "struct ERC2981Upgradeable.ERC2981Storage",
            "members": [
              {
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)554_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)554_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ERC721EnumerableStorage)461_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)316_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)164_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)642_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)96_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)554_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CryptoBottle)6858_storage)dyn_storage": {
            "label": "struct CryptoCuvee.CryptoBottle[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Token)6872_storage)dyn_storage": {
            "label": "struct CryptoCuvee.Token[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4411": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)7875": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_enum(CategoryType)6864": {
            "label": "enum CryptoCuvee.CategoryType",
            "members": [
              "ROUGE",
              "BLANC",
              "ROSE",
              "CHAMPAGNE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(CategoryType)6864,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum CryptoCuvee.CategoryType => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RandomRequestData)6881_storage)": {
            "label": "mapping(uint256 => struct CryptoCuvee.RandomRequestData)",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoBottle)6858_storage": {
            "label": "struct CryptoCuvee.CryptoBottle",
            "members": [
              {
                "label": "categoryType",
                "type": "t_enum(CategoryType)6864",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(Token)6872_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RandomRequestData)6881_storage": {
            "label": "struct CryptoCuvee.RandomRequestData",
            "members": [
              {
                "label": "categoryType",
                "type": "t_enum(CategoryType)6864",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Token)6872_storage": {
            "label": "struct CryptoCuvee.Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)96_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ERC2981": [
            {
              "contract": "ERC2981Upgradeable",
              "label": "_defaultRoyaltyInfo",
              "type": "t_struct(RoyaltyInfo)554_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC2981Upgradeable",
              "label": "_tokenRoyaltyInfo",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)554_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2132133ad63415b8ca0da5c58203965eedb3f74378ff810a9f9545983a251f9e": {
      "address": "0xF719E8c78f4Ec02a34ca3c9eAf05545f2d2f64CD",
      "txHash": "0x1cb9bfe4a9c8d465396e9ac21dd15cf869e8f2969c210659d1eac23c97ba1444",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts/src/VRFConsumerBaseV2Upgradeable.sol:101"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)4930",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:46"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:51"
          },
          {
            "label": "mintingClosed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:98"
          },
          {
            "label": "coordinator",
            "offset": 1,
            "slot": "3",
            "type": "t_contract(IVRFCoordinatorV2Plus)1146",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:103"
          },
          {
            "label": "keyHash",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes32",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:107"
          },
          {
            "label": "callbackGasLimit",
            "offset": 0,
            "slot": "5",
            "type": "t_uint32",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:111"
          },
          {
            "label": "requestConfirmations",
            "offset": 4,
            "slot": "5",
            "type": "t_uint16",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:115"
          },
          {
            "label": "s_subscriptionId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:119"
          },
          {
            "label": "randomnessRequestData",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(RandomRequestData)7342_storage)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:121"
          },
          {
            "label": "cryptoBottles",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_struct(CryptoBottle)7319_storage)dyn_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:126"
          },
          {
            "label": "tokenToCryptoBottle",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:131"
          },
          {
            "label": "uniqueERC20TokenAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:136"
          },
          {
            "label": "tokenAddressExists",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:141"
          },
          {
            "label": "totalTokenQuantity",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:146"
          },
          {
            "label": "unclaimedBottlesByCategory",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_enum(CategoryType)7325,t_array(t_uint256)dyn_storage)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:151"
          },
          {
            "label": "openedBottles",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CryptoCuvee",
            "src": "contracts/src/CryptoBottle.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)333_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)791_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)342_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)333_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC2981Storage)801_storage": {
            "label": "struct ERC2981Upgradeable.ERC2981Storage",
            "members": [
              {
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)791_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)791_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ERC721EnumerableStorage)698_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)553_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)401_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)879_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)333_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyInfo)791_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CryptoBottle)7319_storage)dyn_storage": {
            "label": "struct CryptoCuvee.CryptoBottle[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Token)7333_storage)dyn_storage": {
            "label": "struct CryptoCuvee.Token[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4930": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IVRFCoordinatorV2Plus)1146": {
            "label": "contract IVRFCoordinatorV2Plus",
            "numberOfBytes": "20"
          },
          "t_enum(CategoryType)7325": {
            "label": "enum CryptoCuvee.CategoryType",
            "members": [
              "ROUGE",
              "BLANC",
              "ROSE",
              "CHAMPAGNE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(CategoryType)7325,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum CryptoCuvee.CategoryType => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RandomRequestData)7342_storage)": {
            "label": "mapping(uint256 => struct CryptoCuvee.RandomRequestData)",
            "numberOfBytes": "32"
          },
          "t_struct(CryptoBottle)7319_storage": {
            "label": "struct CryptoCuvee.CryptoBottle",
            "members": [
              {
                "label": "categoryType",
                "type": "t_enum(CategoryType)7325",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokens",
                "type": "t_array(t_struct(Token)7333_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RandomRequestData)7342_storage": {
            "label": "struct CryptoCuvee.RandomRequestData",
            "members": [
              {
                "label": "categoryType",
                "type": "t_enum(CategoryType)7325",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Token)7333_storage": {
            "label": "struct CryptoCuvee.Token",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)333_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.ERC2981": [
            {
              "contract": "ERC2981Upgradeable",
              "label": "_defaultRoyaltyInfo",
              "type": "t_struct(RoyaltyInfo)791_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC2981Upgradeable",
              "label": "_tokenRoyaltyInfo",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)791_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
